#ifndef __SerenityEditorSerenity3D_Frame__
#define __SerenityEditorSerenity3D_Frame__

/**
@file
Subclass of Serenity3D_Frame, which is generated by wxFormBuilder.
*/

#include <vector>
#include <wx/propgrid/propgrid.h>
#include <wx/propgrid/advprops.h>
#include <wx/treectrl.h>
#include "Serenity3D_Editor.h"
#include "wxIrrlicht.h"
#include "engine_base.h"
#include "rc_stage.h"
//// end generated include

struct Serenity_TextureLevel
{
	int level;
	wxString list_item;
};

struct Serenity_Vector3
{
	double x;
	double y;
	double z;
};

struct Serenity_StageCamera
{
	int pov;
	Serenity_Vector3 position;
	Serenity_Vector3 rotation;
};

struct Serenity_StageSettings
{
	int num_views;
	Serenity_StageCamera camera[4];
};

struct Serenity_PreviewMesh
{
	irr::scene::IAnimatedMeshSceneNode* node;
	int project_mesh_index;
	bool animation_change;
};

#define RC_STAGE_NODE_NONE		0
#define RC_STAGE_NODE_STAGE		1
#define RC_STAGE_NODE_GROUP		2
#define RC_STAGE_NODE_ACTOR		3

struct Serenity_StageNode
{
	wxTreeItemId tree_item;
	wxTreeItemId parent_item;
	int node_type;
	int project_index;
	int stage_group;
	wxString group_label;
	bool active;
	std::vector<Serenity_StageNode> groups;
	std::vector<Serenity_StageNode> actors;
};

/** Implementing Serenity3D_Frame */
class SerenityEditorSerenity3D_Frame : public Serenity3D_Frame
{
	public:
		/** Constructor */
		SerenityEditorSerenity3D_Frame( wxWindow* parent );

		wxString editor_path;

		wxFileName asset_dir;

		serenity_project project;

		bool load_project(wxFileName pfile);

		int viewport_mode = 0;
		int mouse_button = 0;
		int mouse_x = -1;
		int mouse_y = -1;

		int viewport_camera_mouse_x = 0;
		int viewport_camera_mouse_y = 0;
		bool viewport_camera_active = false;

		int ClientH(float pct) { return (int) (GetClientSize().y * pct / 100); }
		int ClientW(float pct) { return (int) (GetClientSize().x * pct / 100); }

		void clearScene();

		wxIrrlicht* current_window = NULL;

		wxIrrlicht* stage_window = NULL;
		wxIrrlicht* animation_window = NULL;
		wxIrrlicht* material_window = NULL;
		wxIrrlicht* texture_window = NULL;

		void createIrrlichtStageWindow();
		void createIrrlichtAnimationWindow();
		void createIrrlichtMaterialWindow();
		void createIrrlichtTextureWindow();

		void reloadResources();
		bool isValidID(wxString id_name, int id_type, int mesh_index=-1);

		//-------STAGE TAB----------------
		wxImageList* stage_tree_imageList;
		int stage_tree_rootImage;
		int stage_tree_stageImage;
		int stage_tree_assetImage;
		int stage_tree_lightImage;
		int stage_tree_particleImage;
		int stage_tree_terrainImage;
		int stage_tree_primitiveImage;
		int stage_tree_pathImage;
		int stage_tree_groupImage;

		void updateProjectFromStageEdit();
		int getCurrentStageNodeIndex();
		int getActorNodeIndex(int stage_node_index, int actor_project_index);
		int selected_actor_in_active_stage = -1;

		wxTreeItemId stage_tree_root;
		std::vector<Serenity_StageNode> stage_tree_nodes;

		Serenity_StageSettings current_stage_settings;

		std::vector<wxAuiToolBarItem*> stage_tools;
		int stage_tools_selection = 0;

		void updateToolSelection();
		int getStageToolIndex(wxAuiToolBarItem* toolbar_item);

		void open_stage(int stage_project_index);

		bool delete_actor(int stage_index, int actor_stage_index);

		int stageTab_active_stage_project_index = -1;

		void refresh_actor(int actor_project_index);

		int stageTabGrid_current_stage = -1;
		int stageTabGrid_current_group = -1;
		int stageTabGrid_current_actor = -1;

		void getGridAnimationList(int mesh_project_index, wxPGChoices* choices);
		void getGridMaterialList(int mesh_project_index, wxPGChoices* choices);
		void getGridAllMaterialList(wxPGChoices* choices);
		void getGridTextureList(wxPGChoices* choices);
		int getGridTextureSelection(int texture_project_index, wxPGChoices* choice);

		void setAnimatedActorGrid(int stage_project_index, int actor_project_index);
		void setOctreeActorGrid(int stage_project_index, int actor_project_index);
		void setBillboardActorGrid(int stage_project_index, int actor_project_index);
		void setLightActorGrid(int stage_project_index, int actor_project_index);
		void setTerrainActorGrid(int stage_project_index, int actor_project_index);
		void setWaterActorGrid(int stage_project_index, int actor_project_index);
		void setParticleActorGrid(int stage_project_index, int actor_project_index);
		void setCubeActorGrid(int stage_project_index, int actor_project_index);
		void setSphereActorGrid(int stage_project_index, int actor_project_index);

		void setStageGrid(int stage_project_index);

		//--------MESH TAB--------------
		bool meshTab_isPlaying = false;
		int meshTab_selected_mesh_project_index = -1;
		Serenity_PreviewMesh meshTab_preview_obj;

		void updatePreviewMesh();

		void clearMeshMaterialList();
		void appendMeshMaterialList(int material_index); //index in project.materials[], pass -1 if no material is set


		int meshTab_active_animation_index = -1; //index in current mesh


		//--------MATERIAL TAB-----------------
		int materialTab_selected_material_project_index = -1;
		void refreshMaterialList();

		std::vector<Serenity_TextureLevel> texture_levels;
		void setMaterialTextureLevels();

		irr::scene::ISceneNode* test_material_mesh = NULL;
		irr::scene::ILightSceneNode* test_material_light = NULL;
		void updateTestMesh();

		double material_preview_camera_speed = 0.2;
		double material_preview_camera_distance = 1;
		double material_preview_light_radius = 30;

		//-------TEXTURE TAB--------------------
		int textureTab_selected_texture_project_index = -1;

    protected:
    	void OnNewProjectMenuSelection( wxCommandEvent& event );
    	void OnLoadProjectMenuSelection( wxCommandEvent& event );
    	void OnMainEditorNotebookPageChanged( wxAuiNotebookEvent& event );
    	void OnS3DSelectClicked( wxCommandEvent& event );
		void OnS3DBoxClicked( wxCommandEvent& event );
		void OnS3DMoveClicked( wxCommandEvent& event );
		void OnS3DRotateClicked( wxCommandEvent& event );
		void OnS3DScaleClicked( wxCommandEvent& event );
		void OnS3DPlaneClicked( wxCommandEvent& event );
		void OnS3DCubeClicked( wxCommandEvent& event );
		void OnS3DSphereClicked( wxCommandEvent& event );
		void OnS3DCylinderClicked( wxCommandEvent& event );
		void OnS3DDumpClicked( wxCommandEvent& event );
		void OnS3DWizClicked( wxCommandEvent& event );
		void OnS3DBillboardClicked( wxCommandEvent& event );
		void OnS3DLightClicked( wxCommandEvent& event );
		void OnS3DTerrainClicked( wxCommandEvent& event );
		void OnS3DWaterClicked( wxCommandEvent& event );
		void OnS3DGrassClicked( wxCommandEvent& event );
		void OnS3DPathClicked( wxCommandEvent& event );
		void OnS3DEffectClicked( wxCommandEvent& event );
		void OnS3DModeEditClicked( wxCommandEvent& event );
		void OnS3DModeCameraClicked( wxCommandEvent& event );

		void OnStageUpdate( wxUpdateUIEvent& event );

		void On_Stage_NewStage( wxCommandEvent& event );
		void On_Stage_DeleteStage( wxCommandEvent& event );
		void On_Stage_NewGroup( wxCommandEvent& event );
		void On_Stage_DeleteGroup( wxCommandEvent& event );
		void On_Stage_EditGroup( wxCommandEvent& event );
		void On_Stage_DeleteActor( wxCommandEvent& event );

		void On_Stage_StageNodeActivated( wxTreeEvent& event );
		void On_Stage_StageNodeSelected( wxTreeEvent& event );

		void OnStagePropertyGridChanged( wxPropertyGridEvent& event );

		void OnProjectPropertiesNotebookChanged( wxAuiNotebookEvent& event );

		void On_StageSettings_ShowGrid( wxCommandEvent& event );
		void On_StageSettings_SetGridSize( wxSpinEvent& event );
		void On_StageSettings_SetGridSpacing( wxSpinEvent& event );
		void On_StageSettings_SetGridColor( wxColourPickerEvent& event );
		void On_StageSettings_ShowAxisLines( wxCommandEvent& event );
		void On_StageSettings_ShowAxisRings( wxCommandEvent& event );
		void On_StageSettings_ShowViewCameraPosition( wxCommandEvent& event );
		void On_StageSettings_ShowViewCameraRotation( wxCommandEvent& event );
		void On_StageSettings_ViewCameraSpeed( wxSpinDoubleEvent& event );
		void On_StageSettings_ViewHUDColor( wxColourPickerEvent& event );

		void OnPlayClicked( wxCommandEvent& event );
		void OnStopClicked( wxCommandEvent& event );

		void OnStageViewportMouse( wxMouseEvent& event );

		void OnStageViewportSetFocus( wxFocusEvent& event );
		void OnStageViewportKillFocus( wxFocusEvent& event );
		void OnStageContainerMouse( wxMouseEvent& event );

		void OnViewComboSelect( wxCommandEvent& event );


		//Mesh Tab
		void On_Mesh_MeshList_Select( wxCommandEvent& event );
		void On_Mesh_Load_ButtonClick( wxCommandEvent& event );
		void On_Mesh_Remove_ButtonClick( wxCommandEvent& event );
		void On_Mesh_Save_ButtonClick( wxCommandEvent& event );
		void On_Mesh_MeshID( wxCommandEvent& event );
		void On_Mesh_AddMaterial( wxCommandEvent& event );
		void On_Mesh_RemoveMaterial( wxCommandEvent& event );
		void On_Mesh_SetMaterial( wxCommandEvent& event );
		void On_Mesh_Material_Clear( wxCommandEvent& event );
		void On_Mesh_previewPlay( wxCommandEvent& event );
		void On_Mesh_previewStop( wxCommandEvent& event );
		void On_Mesh_NewAnimation( wxCommandEvent& event );
		void On_Mesh_DeleteAnimation( wxCommandEvent& event );
		void On_Mesh_AnimationList_Select( wxCommandEvent& event );

		void On_Mesh_Animation_AnimationID( wxCommandEvent& event );
		void On_Mesh_Animation_StartFrame( wxCommandEvent& event );
		void On_Mesh_Animation_EndFrame( wxCommandEvent& event );
		void On_Mesh_Animation_Speed( wxCommandEvent& event );

		//Material Tab
		void On_Material_NewMaterial_ButtonClicked( wxCommandEvent& event );
		void On_Material_LoadMaterial_ButtonClicked( wxCommandEvent& event );
		void On_Material_SaveMaterial_ButtonClicked( wxCommandEvent& event );
		void On_Material_RemoveMaterial_ButtonClicked( wxCommandEvent& event );

		void On_Material_MaterialList_Select( wxCommandEvent& event );
		void On_Material_MaterialID_Update( wxCommandEvent& event );
		void On_Material_MaterialType_Update( wxCommandEvent& event );
		void On_Material_Ambient_Update( wxColourPickerEvent& event );
		void On_Material_Diffuse_Update( wxColourPickerEvent& event );
		void On_Material_Emissive_Update( wxColourPickerEvent& event );
		void On_Material_Specular_Update( wxColourPickerEvent& event );
		void On_Material_AntiAlias_Update( wxCommandEvent& event );
		void On_Material_BackfaceCulling_Update( wxCommandEvent& event );
		void On_Material_FrontfaceCulling_Update( wxCommandEvent& event );
		void On_Material_BlendFactor_Update( wxSpinDoubleEvent& event );
		void On_Material_BlendMode_Update( wxCommandEvent& event );
		void On_Material_ColorMask_Update( wxCommandEvent& event );
		void On_Material_ColorMode_Update( wxCommandEvent& event );
		void On_Material_Fog_Update( wxCommandEvent& event );
		void On_Material_GouradShading_Update( wxCommandEvent& event );
		void On_Material_Lighting_Update( wxCommandEvent& event );
		void On_Material_Normalize_Update( wxCommandEvent& event );
		void On_Material_PointCloud_Update( wxCommandEvent& event );
		void On_Material_Shineness_Update( wxSpinEvent& event );

		void On_Material_previewNoLight_Selected( wxCommandEvent& event );
		void On_Material_previewDirectionlight_Selected( wxCommandEvent& event );
		void On_Material_previewPointlight_Selected( wxCommandEvent& event );
		void OnSetMaterialPreviewMesh( wxCommandEvent& event );
		void On_Material_previewSettings_Selected( wxCommandEvent& event );

		void On_Material_AddTextureLevel_ButtonClicked( wxCommandEvent& event );
		void On_Material_RemoveTextureLevel_ButtonClicked( wxCommandEvent& event );
		void On_Material_SetTextureLevel_ButtonClicked( wxCommandEvent& event );
		void On_Material_ClearTextureLevel_ButtonClicked( wxCommandEvent& event );

		//Textures Tab
		void On_Texture_AddTexture_ButtonClicked( wxCommandEvent& event );
		void On_Texture_RemoveTexture_ButtonClicked( wxCommandEvent& event );
		void On_Texture_TextureList_Select( wxCommandEvent& event );
		void On_Texture_TextureID_Update( wxCommandEvent& event );
		void On_Texture_UseColorkey_Update( wxCommandEvent& event );
		void On_Texture_Colorkey_Update( wxColourPickerEvent& event );
	//// end generated class members

};

#endif // __SerenityEditorSerenity3D_Frame__
