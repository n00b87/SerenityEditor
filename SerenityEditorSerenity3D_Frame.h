#ifndef __SerenityEditorSerenity3D_Frame__
#define __SerenityEditorSerenity3D_Frame__

/**
@file
Subclass of Serenity3D_Frame, which is generated by wxFormBuilder.
*/

#include <vector>
#include <wx/propgrid/propgrid.h>
#include <wx/propgrid/advprops.h>
#include "Serenity3D_Editor.h"
#include "wxIrrlicht.h"
#include "engine_base.h"
#include "rc_stage.h"
//// end generated include

struct Serenity_TextureLevel
{
	int level;
	wxString list_item;
};

struct Serenity_Vector3
{
	double x;
	double y;
	double z;
};

struct Serenity_StageCamera
{
	int pov;
	Serenity_Vector3 position;
	Serenity_Vector3 rotation;
};

struct Serenity_StageSettings
{
	int num_views;
	Serenity_StageCamera camera[4];
};

/** Implementing Serenity3D_Frame */
class SerenityEditorSerenity3D_Frame : public Serenity3D_Frame
{
	public:
		/** Constructor */
		SerenityEditorSerenity3D_Frame( wxWindow* parent );

		wxFileName asset_dir;

		serenity_project project;

		int viewport_mode = 0;
		int mouse_button = 0;
		int mouse_x = -1;
		int mouse_y = -1;

		int viewport_camera_mouse_x = 0;
		int viewport_camera_mouse_y = 0;
		bool viewport_camera_active = false;

		int ClientH(float pct) { return (int) (GetClientSize().y * pct / 100); }
		int ClientW(float pct) { return (int) (GetClientSize().x * pct / 100); }

		void clearScene();

		wxIrrlicht* current_window = NULL;

		wxIrrlicht* stage_window = NULL;
		wxIrrlicht* animation_window = NULL;
		wxIrrlicht* material_window = NULL;
		wxIrrlicht* texture_window = NULL;

		void createIrrlichtStageWindow();
		void createIrrlichtAnimationWindow();
		void createIrrlichtMaterialWindow();
		void createIrrlichtTextureWindow();

		void reloadResources();
		bool isValidID(wxString id_name, int id_type, int mesh_index=-1);

		Serenity_StageSettings current_stage_settings;

		std::vector<wxAuiToolBarItem*> stage_tools;
		int stage_tools_selection = 0;

		void updateToolSelection();
		int getStageToolIndex(wxAuiToolBarItem* toolbar_item);

		//--------MESH TAB--------------
		int meshTab_selected_mesh_project_index = -1;

		void clearMeshMaterialList();
		void appendMeshMaterialList(int material_index); //index in project.materials[], pass -1 if no material is set


		int meshTab_active_animation_index = -1; //index in current mesh

		//--------MATERIAL TAB-----------------
		int materialTab_selected_material_project_index = -1;
		void refreshMaterialList();

		std::vector<Serenity_TextureLevel> texture_levels;
		void setMaterialTextureLevels();

		irr::scene::ISceneNode* test_material_mesh = NULL;
		irr::scene::ILightSceneNode* test_material_light = NULL;
		void updateTestMesh();

		double material_preview_camera_speed = 1;
		double material_preview_camera_distance = 1;

		//-------TEXTURE TAB--------------------
		int textureTab_selected_texture_project_index = -1;

    protected:
    	void OnNewProjectMenuSelection( wxCommandEvent& event );
    	void OnLoadProjectMenuSelection( wxCommandEvent& event );
    	void OnMainEditorNotebookPageChanged( wxAuiNotebookEvent& event );
    	void OnS3DSelectClicked( wxCommandEvent& event );
		void OnS3DBoxClicked( wxCommandEvent& event );
		void OnS3DMoveClicked( wxCommandEvent& event );
		void OnS3DRotateClicked( wxCommandEvent& event );
		void OnS3DScaleClicked( wxCommandEvent& event );
		void OnS3DPlaneClicked( wxCommandEvent& event );
		void OnS3DCubeClicked( wxCommandEvent& event );
		void OnS3DSphereClicked( wxCommandEvent& event );
		void OnS3DCylinderClicked( wxCommandEvent& event );
		void OnS3DDumpClicked( wxCommandEvent& event );
		void OnS3DWizClicked( wxCommandEvent& event );
		void OnS3DBillboardClicked( wxCommandEvent& event );
		void OnS3DLightClicked( wxCommandEvent& event );
		void OnS3DTerrainClicked( wxCommandEvent& event );
		void OnS3DWaterClicked( wxCommandEvent& event );
		void OnS3DGrassClicked( wxCommandEvent& event );
		void OnS3DPathClicked( wxCommandEvent& event );
		void OnS3DEffectClicked( wxCommandEvent& event );
		void OnS3DModeEditClicked( wxCommandEvent& event );
		void OnS3DModeCameraClicked( wxCommandEvent& event );

		void OnProjectPropertiesNotebookChanged( wxAuiNotebookEvent& event );

		void OnPlayClicked( wxCommandEvent& event );
		void OnStopClicked( wxCommandEvent& event );

		void OnStageViewportMouse( wxMouseEvent& event );

		void OnStageViewportSetFocus( wxFocusEvent& event );
		void OnStageViewportKillFocus( wxFocusEvent& event );
		void OnStageContainerMouse( wxMouseEvent& event );

		void OnViewComboSelect( wxCommandEvent& event );


		//Mesh Tab
		void On_Mesh_MeshList_Select( wxCommandEvent& event );
		void On_Mesh_Load_ButtonClick( wxCommandEvent& event );
		void On_Mesh_Remove_ButtonClick( wxCommandEvent& event );
		void On_Mesh_Save_ButtonClick( wxCommandEvent& event );
		void On_Mesh_AddMaterial( wxCommandEvent& event );
		void On_Mesh_RemoveMaterial( wxCommandEvent& event );
		void On_Mesh_SetMaterial( wxCommandEvent& event );
		void On_Mesh_previewPlay( wxCommandEvent& event );
		void On_Mesh_previewStop( wxCommandEvent& event );
		void On_Mesh_NewAnimation( wxCommandEvent& event );
		void On_Mesh_DeleteAnimation( wxCommandEvent& event );
		void On_Mesh_AnimationList_Select( wxCommandEvent& event );

		void On_Mesh_Animation_AnimationID( wxCommandEvent& event );
		void On_Mesh_Animation_StartFrame( wxCommandEvent& event );
		void On_Mesh_Animation_EndFrame( wxCommandEvent& event );
		void On_Mesh_Animation_Speed( wxCommandEvent& event );

		//Material Tab
		void On_Material_NewMaterial_ButtonClicked( wxCommandEvent& event );
		void On_Material_LoadMaterial_ButtonClicked( wxCommandEvent& event );
		void On_Material_SaveMaterial_ButtonClicked( wxCommandEvent& event );
		void On_Material_RemoveMaterial_ButtonClicked( wxCommandEvent& event );

		void On_Material_MaterialList_Select( wxCommandEvent& event );
		void On_Material_MaterialID_Update( wxCommandEvent& event );
		void On_Material_MaterialType_Update( wxCommandEvent& event );
		void On_Material_Ambient_Update( wxColourPickerEvent& event );
		void On_Material_Diffuse_Update( wxColourPickerEvent& event );
		void On_Material_Emissive_Update( wxColourPickerEvent& event );
		void On_Material_Specular_Update( wxColourPickerEvent& event );
		void On_Material_AntiAlias_Update( wxCommandEvent& event );
		void On_Material_BackfaceCulling_Update( wxCommandEvent& event );
		void On_Material_FrontfaceCulling_Update( wxCommandEvent& event );
		void On_Material_BlendFactor_Update( wxSpinDoubleEvent& event );
		void On_Material_BlendMode_Update( wxCommandEvent& event );
		void On_Material_ColorMask_Update( wxCommandEvent& event );
		void On_Material_ColorMode_Update( wxCommandEvent& event );
		void On_Material_Fog_Update( wxCommandEvent& event );
		void On_Material_GouradShading_Update( wxCommandEvent& event );
		void On_Material_Lighting_Update( wxCommandEvent& event );
		void On_Material_Normalize_Update( wxCommandEvent& event );
		void On_Material_PointCloud_Update( wxCommandEvent& event );
		void On_Material_Shineness_Update( wxSpinEvent& event );

		void On_Material_previewNoLight_Selected( wxCommandEvent& event );
		void On_Material_previewDirectionlight_Selected( wxCommandEvent& event );
		void On_Material_previewPointlight_Selected( wxCommandEvent& event );
		void OnSetMaterialPreviewMesh( wxCommandEvent& event );
		void On_Material_previewSettings_Selected( wxCommandEvent& event );

		void On_Material_AddTextureLevel_ButtonClicked( wxCommandEvent& event );
		void On_Material_RemoveTextureLevel_ButtonClicked( wxCommandEvent& event );
		void On_Material_SetTextureLevel_ButtonClicked( wxCommandEvent& event );

		//Textures Tab
		void On_Texture_AddTexture_ButtonClicked( wxCommandEvent& event );
		void On_Texture_RemoveTexture_ButtonClicked( wxCommandEvent& event );
		void On_Texture_TextureList_Select( wxCommandEvent& event );
		void On_Texture_TextureID_Update( wxCommandEvent& event );
		void On_Texture_UseColorkey_Update( wxCommandEvent& event );
		void On_Texture_Colorkey_Update( wxColourPickerEvent& event );
	//// end generated class members

};

#endif // __SerenityEditorSerenity3D_Frame__
